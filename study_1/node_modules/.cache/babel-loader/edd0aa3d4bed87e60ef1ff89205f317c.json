{"ast":null,"code":"var _jsxFileName = \"/Users/hyejin/Desktop/project/react_study/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TOC from './components/TOC';\nimport Subject from './components/Subject';\nimport Content from './components/Content';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    console.log('chloe test construcor');\n    /**\n     * react에서는 state의 값이 바뀌면, \n     * 그 state를 가지고 있는 컴포넌트의 render함수가 다시 호출된다.\n     * 그 render함수가 다시 호출됨에 따라 하위 컴포넌트들도 다시 호출된다.\n     * ==> 화면이 다시 그려진다.\n     */\n\n    this.state = {\n      mode: 'read',\n      subject: {\n        title: 'WEB',\n        sub: 'world wide web!'\n      },\n      welcome: {\n        title: 'Welcome',\n        desc: 'Hello, React!!'\n      },\n      contents: [{\n        id: 1,\n        title: 'HTML',\n        desc: 'HTML is for information'\n      }, {\n        id: 2,\n        title: 'CSS',\n        desc: 'Css is for design'\n      }, {\n        id: 3,\n        title: 'JavaScript',\n        desc: 'HTML is for interactive'\n      }]\n    };\n  }\n  /*\n  어떤 HTML을 그릴 것인가를 결정하는 함수\n   반드시 react는 하나의 태그 안 쪽에 나머지 태그들이 있어야 한다.\n   --> 가장 바깥 쪽에는 태그 하나가 있어야 한다. = 없으면 error가 남\n  */\n\n\n  render() {\n    var _title,\n        _desc = null;\n\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n    } else if (this.state.mode === 'read') {\n      _title = this.state.contents[0].title;\n      _desc = this.state.contents[0].desc;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      onClick: function (evt) {\n        // 현재 태그(a tag)의 기본적인 동작 방법을 금지시킨다.\n        evt.preventDefault();\n        this.state.mode = 'welcome';\n      }.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.subject.title)), this.state.subject.sub), React.createElement(TOC, {\n      data: this.state.contents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Content, {\n      title: _title,\n      desc: _desc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hyejin/Desktop/project/react_study/src/App.js"],"names":["React","Component","TOC","Subject","Content","App","constructor","props","console","log","state","mode","subject","title","sub","welcome","desc","contents","id","render","_title","_desc","evt","preventDefault","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEA;;;;;;;AAMA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,MADK;AAEXC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,KADA;AAEPC,QAAAA,GAAG,EAAE;AAFE,OAFE;AAMXC,MAAAA,OAAO,EAAE;AACPF,QAAAA,KAAK,EAAE,SADA;AAEPG,QAAAA,IAAI,EAAE;AAFC,OANE;AAUXC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASL,QAAAA,KAAK,EAAE,MAAhB;AAAwBG,QAAAA,IAAI,EAAE;AAA9B,OADQ,EAER;AAAEE,QAAAA,EAAE,EAAE,CAAN;AAASL,QAAAA,KAAK,EAAE,KAAhB;AAAuBG,QAAAA,IAAI,EAAE;AAA7B,OAFQ,EAGR;AAAEE,QAAAA,EAAE,EAAE,CAAN;AAASL,QAAAA,KAAK,EAAE,YAAhB;AAA8BG,QAAAA,IAAI,EAAE;AAApC,OAHQ;AAVC,KAAb;AAgBD;AAED;;;;;;;AAMAG,EAAAA,MAAM,GAAG;AACP,QAAIC,MAAJ;AAAA,QAAYC,KAAK,GAAG,IAApB;;AAEA,QAAI,KAAKX,KAAL,CAAWC,IAAX,KAAoB,SAAxB,EAAmC;AACjCS,MAAAA,MAAM,GAAG,KAAKV,KAAL,CAAWK,OAAX,CAAmBF,KAA5B;AACAQ,MAAAA,KAAK,GAAG,KAAKX,KAAL,CAAWK,OAAX,CAAmBC,IAA3B;AACD,KAHD,MAGO,IAAI,KAAKN,KAAL,CAAWC,IAAX,KAAoB,MAAxB,EAAgC;AACrCS,MAAAA,MAAM,GAAG,KAAKV,KAAL,CAAWO,QAAX,CAAoB,CAApB,EAAuBJ,KAAhC;AACAQ,MAAAA,KAAK,GAAG,KAAKX,KAAL,CAAWO,QAAX,CAAoB,CAApB,EAAuBD,IAA/B;AACD;;AAED,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,OAAO,EAAE,UAASM,GAAT,EAAc;AACrC;AACAA,QAAAA,GAAG,CAACC,cAAJ;AACA,aAAKb,KAAL,CAAWC,IAAX,GAAkB,SAAlB;AACD,OAJwB,CAIvBa,IAJuB,CAIlB,IAJkB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIW,KAAKd,KAAL,CAAWE,OAAX,CAAmBC,KAJ9B,CAAJ,CADF,EAMG,KAAKH,KAAL,CAAWE,OAAX,CAAmBE,GANtB,CAFF,EAUE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWO,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEG,MAAhB;AAAwB,MAAA,IAAI,EAAEC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAeD;;AA9DyB;;AAiE5B,eAAehB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TOC from './components/TOC';\nimport Subject from './components/Subject';\nimport Content from './components/Content';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    console.log('chloe test construcor');\n\n    /**\n     * react에서는 state의 값이 바뀌면, \n     * 그 state를 가지고 있는 컴포넌트의 render함수가 다시 호출된다.\n     * 그 render함수가 다시 호출됨에 따라 하위 컴포넌트들도 다시 호출된다.\n     * ==> 화면이 다시 그려진다.\n     */\n    this.state = {\n      mode: 'read',\n      subject: {\n        title: 'WEB',\n        sub: 'world wide web!'\n      },\n      welcome: {\n        title: 'Welcome',\n        desc: 'Hello, React!!'\n      },\n      contents: [\n        { id: 1, title: 'HTML', desc: 'HTML is for information' },\n        { id: 2, title: 'CSS', desc: 'Css is for design' },\n        { id: 3, title: 'JavaScript', desc: 'HTML is for interactive' }\n      ]\n    }\n  }\n\n  /*\n  어떤 HTML을 그릴 것인가를 결정하는 함수\n\n  반드시 react는 하나의 태그 안 쪽에 나머지 태그들이 있어야 한다.\n   --> 가장 바깥 쪽에는 태그 하나가 있어야 한다. = 없으면 error가 남\n  */\n  render() {\n    var _title, _desc = null;\n\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n    } else if (this.state.mode === 'read') {\n      _title = this.state.contents[0].title;\n      _desc = this.state.contents[0].desc;\n    }\n\n    return (\n      <div className=\"App\">\n        {/* <Subject title={this.state.subject.title} sub={this.state.subject.sub}></Subject> */}\n        <header>\n          <h1><a href=\"/\" onClick={function(evt) {\n            // 현재 태그(a tag)의 기본적인 동작 방법을 금지시킨다.\n            evt.preventDefault();\n            this.state.mode = 'welcome';\n          }.bind(this)}>{this.state.subject.title}</a></h1>\n          {this.state.subject.sub}\n        </header>\n        <TOC data={this.state.contents}></TOC>\n        <Content title={_title} desc={_desc}></Content>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}