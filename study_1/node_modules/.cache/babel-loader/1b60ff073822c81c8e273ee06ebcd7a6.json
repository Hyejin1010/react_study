{"ast":null,"code":"var _jsxFileName = \"/Users/hyejin/Desktop/project/react_study/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TOC from './components/TOC';\nimport Subject from './components/Subject';\nimport ReadContent from './components/ReadContent';\nimport Control from './components/Control';\nimport CreateContent from './components/CreateContent';\nimport UpdateContent from './components/UpdateContent';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    console.log('chloe test construcor');\n    this.max_content_id = 3;\n    /**\n     * react에서는 state의 값이 바뀌면, \n     * 그 state를 가지고 있는 컴포넌트의 render함수가 다시 호출된다.\n     * 그 render함수가 다시 호출됨에 따라 하위 컴포넌트들도 다시 호출된다.\n     * ==> 화면이 다시 그려진다.\n     */\n\n    this.state = {\n      mode: 'welcome',\n      selected_content_id: 2,\n      subject: {\n        title: 'WEB',\n        sub: 'world wide web!'\n      },\n      welcome: {\n        title: 'Welcome',\n        desc: 'Hello, React!!'\n      },\n      contents: [{\n        id: 1,\n        title: 'HTML',\n        desc: 'HTML is for information'\n      }, {\n        id: 2,\n        title: 'CSS',\n        desc: 'Css is for design'\n      }, {\n        id: 3,\n        title: 'JavaScript',\n        desc: 'HTML is for interactive'\n      }]\n    };\n  }\n\n  getReadContent() {\n    return this.state.contents.find(content => content.id === this.state.selected_content_id) || {};\n  }\n\n  getContent() {\n    var _title,\n        _desc,\n        _article,\n        _content = null;\n\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _article = React.createElement(ReadContent, {\n        title: _title,\n        desc: _desc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    } else if (this.state.mode === 'read') {\n      _content = this.getReadContent();\n      _article = React.createElement(ReadContent, {\n        title: _content.title,\n        desc: _content.desc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    } else if (this.state.mode === 'create') {\n      _article = React.createElement(CreateContent, {\n        onSubmit: function (_title, _desc) {\n          // add content to this.state.contents\n          this.setState({\n            contents: this.state.contents.concat({\n              id: ++this.max_content_id,\n              title: _title,\n              desc: _desc\n            }),\n            mode: 'read',\n            selected_content_id: this.max_content_id\n          });\n        }.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    } else if (this.state.mode === 'update') {\n      _content = this.getReadContent();\n      _article = React.createElement(UpdateContent, {\n        data: _content,\n        onSubmit: function (_id, _title, _desc) {\n          const contents = Array.from(this.state.contents);\n          const index = contents.findIndex(content => content.id === _id);\n\n          if (index > -1) {\n            contents[index] = {\n              id: _id,\n              title: _title,\n              desc: _desc\n            };\n          }\n\n          this.setState({\n            contents,\n            mode: 'read'\n          });\n        }.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n    }\n\n    return _article;\n  }\n  /*\n  어떤 HTML을 그릴 것인가를 결정하는 함수\n   반드시 react는 하나의 태그 안 쪽에 나머지 태그들이 있어야 한다.\n   --> 가장 바깥 쪽에는 태그 하나가 있어야 한다. = 없으면 error가 남\n  */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Subject, {\n      title: this.state.subject.title,\n      sub: this.state.subject.sub,\n      onChangePage: function () {\n        /**\n         * 왜 직접 변경하지 않고 setState로 하는가?\n         * contructor에서 직접 변경 가능\n         * \n         * 이유: 직접 바꾸면 react입장에서는 몰래 바꾸는 것과 같다. 바꾼 걸 알 수가 없음.\n         */\n        this.setState({\n          mode: 'welcome'\n        });\n        /** this: render함수가 속해있는 그 컴포넌트 자신을 가리킨다.\n        * \n        * event 함수 내에서는 this값이 없다.\n        * -> 주입하는 방법? .bind(해당 함수 내 this값으로 주고 싶은 것)\n        */\n      }.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.subject.sub), React.createElement(TOC, {\n      data: this.state.contents,\n      onChangePage: function (id) {\n        this.setState({\n          mode: 'read',\n          selected_content_id: Number(id)\n        });\n      }.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Control, {\n      onChangeMode: function (mode) {\n        if (mode === 'delete') {\n          if (window.confirm('really?')) {\n            const contents = Array.from(this.state.contents);\n            const index = contents.findIndex(content => content.id === this.state.selected_content_id);\n\n            if (index > -1) {\n              contents.splice(index, 1);\n              this.setState({\n                mode: 'welcome',\n                contents\n              });\n            }\n          }\n        }\n\n        this.setState({\n          mode\n        });\n      }.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), this.getContent());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hyejin/Desktop/project/react_study/src/App.js"],"names":["React","Component","TOC","Subject","ReadContent","Control","CreateContent","UpdateContent","App","constructor","props","console","log","max_content_id","state","mode","selected_content_id","subject","title","sub","welcome","desc","contents","id","getReadContent","find","content","getContent","_title","_desc","_article","_content","setState","concat","bind","_id","Array","from","index","findIndex","render","Number","window","confirm","splice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TOC from './components/TOC';\nimport Subject from './components/Subject';\nimport ReadContent from './components/ReadContent';\nimport Control from './components/Control';\nimport CreateContent from './components/CreateContent';\nimport UpdateContent from './components/UpdateContent';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    console.log('chloe test construcor');\n\n    this.max_content_id = 3;\n\n    /**\n     * react에서는 state의 값이 바뀌면, \n     * 그 state를 가지고 있는 컴포넌트의 render함수가 다시 호출된다.\n     * 그 render함수가 다시 호출됨에 따라 하위 컴포넌트들도 다시 호출된다.\n     * ==> 화면이 다시 그려진다.\n     */\n    this.state = {\n      mode: 'welcome',\n      selected_content_id: 2,\n      subject: {\n        title: 'WEB',\n        sub: 'world wide web!'\n      },\n      welcome: {\n        title: 'Welcome',\n        desc: 'Hello, React!!'\n      },\n      contents: [\n        { id: 1, title: 'HTML', desc: 'HTML is for information' },\n        { id: 2, title: 'CSS', desc: 'Css is for design' },\n        { id: 3, title: 'JavaScript', desc: 'HTML is for interactive' }\n      ]\n    }\n  }\n\n  getReadContent() {\n    return this.state.contents.find(content => content.id === this.state.selected_content_id) || {};\n  }\n\n  getContent() {\n    var _title, _desc, _article, _content  = null;\n\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _article = <ReadContent title={_title} desc={_desc}></ReadContent>;\n    } else if (this.state.mode === 'read') {\n      _content = this.getReadContent();\n      _article = <ReadContent title={_content.title} desc={_content.desc}></ReadContent>;\n    } else if (this.state.mode === 'create') {\n      _article = <CreateContent onSubmit={function(_title, _desc) {\n        // add content to this.state.contents\n        this.setState({\n          contents: this.state.contents.concat({ id: ++ this.max_content_id, title: _title, desc: _desc }),\n          mode: 'read',\n          selected_content_id: this.max_content_id\n        });\n      }.bind(this)}></CreateContent>\n    } else if (this.state.mode === 'update') {\n      _content = this.getReadContent();\n      _article = <UpdateContent data={_content} onSubmit={function(_id, _title, _desc) {\n        const contents = Array.from(this.state.contents);\n        const index = contents.findIndex(content => content.id === _id);\n        if (index > -1) {\n          contents[index] = { id: _id, title: _title, desc: _desc };\n        }\n        this.setState({ contents, mode: 'read' });\n      }.bind(this)}></UpdateContent>\n    }\n\n    return _article;\n  }\n\n  /*\n  어떤 HTML을 그릴 것인가를 결정하는 함수\n\n  반드시 react는 하나의 태그 안 쪽에 나머지 태그들이 있어야 한다.\n   --> 가장 바깥 쪽에는 태그 하나가 있어야 한다. = 없으면 error가 남\n  */\n  render() {\n    return (\n      <div className=\"App\">\n        <Subject \n          title={this.state.subject.title} \n          sub={this.state.subject.sub}\n          onChangePage={function() {\n            /**\n             * 왜 직접 변경하지 않고 setState로 하는가?\n             * contructor에서 직접 변경 가능\n             * \n             * 이유: 직접 바꾸면 react입장에서는 몰래 바꾸는 것과 같다. 바꾼 걸 알 수가 없음.\n             */\n            this.setState({ mode: 'welcome' });\n             /** this: render함수가 속해있는 그 컴포넌트 자신을 가리킨다.\n             * \n             * event 함수 내에서는 this값이 없다.\n             * -> 주입하는 방법? .bind(해당 함수 내 this값으로 주고 싶은 것)\n             */\n          }.bind(this)}></Subject>\n        <header>\n          {this.state.subject.sub}\n        </header>\n        <TOC data={this.state.contents} onChangePage={function(id) {\n          this.setState({\n            mode: 'read',\n            selected_content_id: Number(id)\n          });\n        }.bind(this)}></TOC>\n\n        <Control onChangeMode={function(mode) {\n          if (mode === 'delete') {\n            if (window.confirm('really?')) {\n              const contents = Array.from(this.state.contents);\n              const index = contents.findIndex((content) => content.id === this.state.selected_content_id);\n              if (index > -1) {\n                contents.splice(index, 1);\n                this.setState({ mode: 'welcome', contents });\n              }\n            }\n          }\n          this.setState({mode});\n        }.bind(this)}></Control>\n\n        {this.getContent()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}