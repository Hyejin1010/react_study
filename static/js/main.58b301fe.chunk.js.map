{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","App","props","state","isLoading","movies","axios","get","data","this","setState","getMovies","movie","medium_cover_image","Component","ReactDOM","render","document","getElementById"],"mappings":"wTA2BeA,MAvBf,YAA6D,EAA5CC,GAA6C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC/C,OAAO,yBAAKC,UAAU,iBAClB,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACX,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,UAAWD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAChC,wBAAIC,IAAKD,EAAOL,UAAU,iBAAiBD,OAE/C,uBAAGC,UAAU,kBAAkBH,MC2C5BU,G,kBA7Cb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KANRC,MAAQ,CACNC,WAAW,EACXC,OAAQ,IAGS,E,2MAK2BC,IAAMC,IAAI,4D,gBAA9BF,E,EAAhBG,KAAQA,KAAQH,OACxBI,KAAKC,SAAS,CAAEN,WAAW,EAAOC,W,gJAIlCI,KAAKE,c,2HAOG,IAAD,EACuBF,KAAKN,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,6BAASX,UAAU,aACfU,EACA,yBAAKV,UAAU,UACb,0BAAMA,UAAU,gBAAhB,gBAGA,yBAAKA,UAAU,UAEXW,EAAOR,KAAI,SAACe,GAAD,OACT,kBAAC,EAAD,CACEZ,IAAKY,EAAMxB,GACXA,GAAIwB,EAAMxB,GACVC,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAMC,mBACdpB,OAAQmB,EAAMnB,kB,GA1ChBqB,cCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.58b301fe.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Movie.css';\n\nfunction Movie({ id, year, title, summary, poster, genres }) {\n    return <div className=\"movies__movie\">\n        <img src={poster} alt={title} title={title} />\n        <div className=\"movie__data\">\n            <h3 className=\"movie__title\">{title}</h3>\n            <h5 className=\"movie__year\">{year}</h5>\n            <ul className=\"genres\">{ genres.map((genre, index) => (\n                <li key={index} className=\"genres__genre\">{genres}</li>\n            ))}</ul>\n            <p className=\"movie__summary\">{summary}</p>\n        </div>\n    </div>\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default Movie;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    isLoading: true,\n    movies: []\n  }\n\n  constructor(props) {\n    super(props);\n  }\n\n  async getMovies() {\n    const { data: { data: { movies } }} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ isLoading: false, movies });\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  componentDidUpdate() { }\n\n  componentWillMount() { }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        { isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading ...</span>\n          </div>\n          ) : (\n            <div className=\"movies\">\n              {\n                movies.map((movie) => \n                  <Movie \n                    key={movie.id}\n                    id={movie.id} \n                    year={movie.year} \n                    title={movie.title} \n                    summary={movie.summary} \n                    poster={movie.medium_cover_image}\n                    genres={movie.genres} />\n                )}\n            </div>\n          )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}